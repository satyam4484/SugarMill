name: Code Quality Check

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  quality:
    name: Code Quality
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      # Install dependencies for both frontend and backend
      - name: Install Frontend Dependencies
        working-directory: ./frontend
        run: |
          if [ -f "yarn.lock" ]; then
            yarn install --frozen-lockfile
          else
            npm ci
          fi

      - name: Install Backend Dependencies
        working-directory: ./backend
        run: |
          if [ -f "yarn.lock" ]; then
            yarn install --frozen-lockfile
          else
            npm ci
          fi

      # Run tests for both frontend and backend
      - name: Run Frontend Tests
        id: frontend-tests
        working-directory: ./frontend
        continue-on-error: true
        run: |
          if [ -f "yarn.lock" ]; then
            yarn test:coverage
          else
            npm run test:coverage
          fi
          echo "coverage=$(cat coverage/coverage-summary.json | jq -r '.total.lines.pct')" >> $GITHUB_OUTPUT

      - name: Run Backend Tests
        id: backend-tests
        working-directory: ./backend
        continue-on-error: true
        run: |
          if [ -f "yarn.lock" ]; then
            yarn test:coverage
          else
            npm run test:coverage
          fi
          echo "coverage=$(cat coverage/coverage-summary.json | jq -r '.total.lines.pct')" >> $GITHUB_OUTPUT

      - name: Create Issue for Low Coverage
        if: steps.frontend-tests.outputs.coverage < 70 || steps.backend-tests.outputs.coverage < 70
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const frontendCoverage = ${{ steps.frontend-tests.outputs.coverage || 0 }}
            const backendCoverage = ${{ steps.backend-tests.outputs.coverage || 0 }}
            
            const issueBody = `
            # Test Coverage Alert
            
            The test coverage is below the required threshold of 70%:
            
            - Frontend Coverage: ${frontendCoverage}%
            - Backend Coverage: ${backendCoverage}%
            
            Please add more tests to improve coverage.
            
            ## Details
            - Commit: ${context.sha}
            - Branch: ${context.ref}
            - Workflow Run: ${context.runId}
            `;
            
            await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: 'ðŸ“Š Test Coverage Below Threshold',
              body: issueBody,
              labels: ['test-coverage', 'needs-attention']
            });